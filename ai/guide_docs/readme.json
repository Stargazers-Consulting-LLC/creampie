{
  "metadata": {
    "title": "Documentation Guides",
    "description": "",
    "version": "2.1",
    "last_updated": "2025-06-18",
    "source": "guide_docs/readme.md",
    "cross_references": [
      "core_principles.json",
      "feature_template.json",
      "../project_context/architecture_overview.json",
      "../project_context/common_patterns.json",
      "../project_context/development_workflow.json"
    ]
  },
  "sections": {
    "documentation_guides": {
      "title": "Documentation Guides",
      "description": "> This folder contains comprehensive documentation guides organized by language and domain. Use thes...",
      "content": "> This folder contains comprehensive documentation guides organized by language and domain. Use these guides for implementation patterns, best practices, and development standards."
    },
    "ai_metadata": {
      "title": "AI Metadata",
      "description": "**Template Version:** 2.1\n**AI Processing Level:** High\n**Required Context:** AI development assista...",
      "content": "**Template Version:** 2.1\n**AI Processing Level:** High\n**Required Context:** AI development assistance, documentation structure, project patterns\n**Validation Required:** Yes\n**Code Generation:** Supported\n**Search Optimization:** Enhanced\n\n**Dependencies:**\n- `core_principles.json.replace(\".json\", \".json\")` - Decision-making frameworks\n- `feature_template.json.replace(\".json\", \".json\")` - Feature development patterns\n- `../project_context/architecture_overview.json.replace(\".json\", \".json\")` - System architecture\n- `../project_context/common_patterns.json.replace(\".json\", \".json\")` - Project patterns\n- `../project_context/development_workflow.json.replace(\".json\", \".json\")` - Development process\n\n**Validation Rules:**\n- All guides must include comprehensive AI metadata\n- Cross-references must be accurate and bidirectional\n- Code generation hints must be specific and actionable\n- Context awareness must be maintained throughout\n- Quality standards must be consistently applied\n\n**Keywords:** AI development guides, code assistance, patterns, best practices, language-specific, domain_specific"
    },
    "guide_structure": {
      "title": "Guide Structure",
      "description": "",
      "content": ""
    },
    "_core_principles": {
      "title": "üìÅ core_principles",
      "description": "- **[core_principles.json](core_principles.json.replace(\".json\", \".json\"))** - Fundamental decision-...",
      "content": "- **[core_principles.json](core_principles.json.replace(\".json\", \".json\"))** - Fundamental decision-making frameworks and philosophies\n- **[code_review_patterns.json](code_review_patterns.json.replace(\".json\", \".json\"))** - How to structure suggestions and handle conflicts\n- **[ai_tool_optimization_guide.json](ai_tool_optimization_guide.json.replace(\".json\", \".json\"))** - Patterns for optimizing AI tool consumption"
    },
    "_project_context": {
      "title": "üìÅ Project Context",
      "description": "- **[architecture_overview.json](../project_context/architecture_overview.json.replace(\".json\", \".js...",
      "content": "- **[architecture_overview.json](../project_context/architecture_overview.json.replace(\".json\", \".json\"))** - High-level system design and component relationships\n- **[development_workflow.json](../project_context/development_workflow.json.replace(\".json\", \".json\"))** - How features flow from idea to deployment\n- **[common_patterns.json](../project_context/common_patterns.json.replace(\".json\", \".json\"))** - Project-specific patterns and conventions"
    },
    "_language_specific": {
      "title": "üìÅ Language-Specific",
      "description": "- **[python_style_guide.json](Language-Specific/python_style_guide.json.replace(\".json\", \".json\"))**...",
      "content": "- **[python_style_guide.json](Language-Specific/python_style_guide.json.replace(\".json\", \".json\"))** - Pure Python style rules\n- **[python_testing_guide.json](Language-Specific/python_testing_guide.json.replace(\".json\", \".json\"))** - Pure testing patterns\n- **[fastapi_development_guide.json](Language-Specific/fastapi_development_guide.json.replace(\".json\", \".json\"))** - General FastAPI patterns"
    },
    "_domain_specific": {
      "title": "üìÅ domain_specific",
      "description": "- **[database_management_guide.json](domain_specific/database_management_guide.json.replace(\".json\",...",
      "content": "- **[database_management_guide.json](domain_specific/database_management_guide.json.replace(\".json\", \".json\"))** - Database patterns and migrations\n- **[frontend_style_guide.json](domain_specific/frontend_style_guide.json.replace(\".json\", \".json\"))** - React and frontend patterns\n- **[shell_style_guide.json](domain_specific/shell_style_guide.json.replace(\".json\", \".json\"))** - Shell script patterns\n- **[web_scraping_patterns.json](domain_specific/web_scraping_patterns.json.replace(\".json\", \".json\"))** - Project-specific web scraping patterns (HTML parsing, background tasks, file processing)"
    },
    "_templates": {
      "title": "üìÅ Templates",
      "description": "- **[feature_template.json](feature_template.json.replace(\".json\", \".json\"))** - Standardized featur...",
      "content": "- **[feature_template.json](feature_template.json.replace(\".json\", \".json\"))** - Standardized feature development template"
    },
    "_search__navigation": {
      "title": "üìÅ Search & Navigation",
      "description": "- **[Search Index.json](../search_index.json.replace(\".json\", \".json\"))** - Comprehensive search ind...",
      "content": "- **[Search Index.json](../search_index.json.replace(\".json\", \".json\"))** - Comprehensive search index for quick navigation"
    },
    "how_to_use_these_guides": {
      "title": "How to Use These Guides",
      "description": "",
      "content": ""
    },
    "for_ai_assistants": {
      "title": "For AI Assistants",
      "description": "1. **Start with core_principles** - Understand the fundamental frameworks for decision-making\n2. **U...",
      "content": "1. **Start with core_principles** - Understand the fundamental frameworks for decision-making\n2. **Understand Project Context** - Learn about the specific project architecture and patterns\n3. **Apply Language-Specific Rules** - Use the appropriate language guide for the code you're working with\n4. **Consider Domain Context** - Apply domain_specific patterns when relevant\n5. **Use code_review_patterns** - Structure your suggestions and handle conflicts appropriately\n6. **Optimize for AI Tools** - Follow ai_tool_optimization_guide for better tool consumption"
    },
    "decision_making_flow": {
      "title": "Decision-Making Flow",
      "description": "```\nUser Request ‚Üí core_principles ‚Üí Project Context ‚Üí Language-Specific ‚Üí domain_specific ‚Üí code_re...",
      "content": "```\nUser Request ‚Üí core_principles ‚Üí Project Context ‚Üí Language-Specific ‚Üí domain_specific ‚Üí code_review_patterns ‚Üí AI Tool Optimization\n```"
    },
    "example_workflow": {
      "title": "Example Workflow",
      "description": "1. **User asks for code review**\n   - Check core_principles for decision-making framework\n   - Revie...",
      "content": "1. **User asks for code review**\n   - Check core_principles for decision-making framework\n   - Review Project Context for established patterns\n   - Apply python_style_guide for style violations\n   - Use code_review_patterns to structure suggestions\n   - Apply AI Tool Optimization for better communication\n\n2. **User asks for new feature**\n   - Check core_principles for context awareness\n   - Review architecture_overview for system design\n   - Apply FastAPI Guide for general API patterns\n   - Consider web_scraping_patterns for data processing needs\n   - Consider Database Guide for data modeling\n   - Use feature_template for structured planning\n\n3. **User encounters conflict**\n   - Use code_review_patterns for conflict resolution\n   - Apply core_principles for priority assessment\n   - Check common_patterns for established conventions\n   - Explain reasoning using appropriate guides\n   - Apply AI Tool Optimization for clear communication"
    },
    "guide_relationships": {
      "title": "Guide Relationships",
      "description": "",
      "content": ""
    },
    "hierarchy": {
      "title": "Hierarchy",
      "description": "- **core_principles** ‚Üí **Project Context** ‚Üí **Language-Specific** ‚Üí **domain_specific**\n- Each lev...",
      "content": "- **core_principles** ‚Üí **Project Context** ‚Üí **Language-Specific** ‚Üí **domain_specific**\n- Each level builds on the previous level\n- Conflicts are resolved using priority systems from core_principles\n- AI Tool Optimization applies to all levels"
    },
    "cross_references": {
      "title": "Cross-References",
      "description": "- Guides reference each other when appropriate\n- core_principles provide the foundation for all othe...",
      "content": "- Guides reference each other when appropriate\n- core_principles provide the foundation for all other guides\n- Project Context provides project-specific understanding\n- code_review_patterns provide frameworks for applying all guides\n- AI Tool Optimization ensures effective tool consumption"
    },
    "maintenance": {
      "title": "Maintenance",
      "description": "- Update core_principles when fundamental patterns change\n- Update Project Context when architecture...",
      "content": "- Update core_principles when fundamental patterns change\n- Update Project Context when architecture evolves\n- Update Language-Specific guides when language patterns evolve\n- Update domain_specific guides when domain requirements change\n- Keep guides consistent and avoid duplication\n- Maintain AI Tool Optimization standards across all guides"
    },
    "best_practices_for_ai_assistants": {
      "title": "Best Practices for AI Assistants",
      "description": "",
      "content": ""
    },
    "when_using_these_guides": {
      "title": "When Using These Guides",
      "description": "1. **Always start with context** - Understand what the user is trying to accomplish\n2. **Apply princ...",
      "content": "1. **Always start with context** - Understand what the user is trying to accomplish\n2. **Apply principles hierarchically** - Core ‚Üí Project Context ‚Üí Language ‚Üí Domain\n3. **Explain your reasoning** - Help users understand why you're suggesting changes\n4. **Be consistent** - Apply the same patterns across similar situations\n5. **Learn and adapt** - Update your approach based on user feedback\n6. **Optimize for tools** - Use AI Tool Optimization patterns for better effectiveness"
    },
    "when_guides_conflict": {
      "title": "When Guides Conflict",
      "description": "1. **Identify the conflict** - Clearly state what the guides say differently\n2. **Assess context** -...",
      "content": "1. **Identify the conflict** - Clearly state what the guides say differently\n2. **Assess context** - Consider the specific situation and user's needs\n3. **Apply priority system** - Security/Data Integrity ‚Üí Project Consistency ‚Üí Performance ‚Üí Style\n4. **Explain trade-offs** - Help user understand the implications of your recommendation\n5. **Use AI optimization** - Structure response for maximum clarity and effectiveness"
    },
    "when_suggesting_changes": {
      "title": "When Suggesting Changes",
      "description": "1. **Structure suggestions** - Use the standard format from code_review_patterns\n2. **Prioritize iss...",
      "content": "1. **Structure suggestions** - Use the standard format from code_review_patterns\n2. **Prioritize issues** - Critical ‚Üí High ‚Üí Medium ‚Üí Low\n3. **Provide context** - Explain why changes are beneficial\n4. **Be educational** - Help users understand patterns for future use\n5. **Apply AI patterns** - Use optimization techniques for better communication"
    },
    "ai_tool_optimization_features": {
      "title": "AI Tool Optimization Features",
      "description": "",
      "content": ""
    },
    "enhanced_metadata": {
      "title": "Enhanced Metadata",
      "description": "- **Comprehensive metadata** - All guides include detailed AI metadata\n- **Search optimization** - K...",
      "content": "- **Comprehensive metadata** - All guides include detailed AI metadata\n- **Search optimization** - Keywords and semantic tags for better discovery\n- **Cross-reference system** - Bidirectional linking between related content\n- **Version tracking** - Template versions and change history"
    },
    "code_generation_support": {
      "title": "Code Generation Support",
      "description": "- **Specific file paths** - Exact references to codebase structure\n- **Implementation hints** - Clea...",
      "content": "- **Specific file paths** - Exact references to codebase structure\n- **Implementation hints** - Clear guidance for code generation\n- **Pattern examples** - Concrete examples from existing codebase\n- **Validation rules** - Quality standards for generated code"
    },
    "context_awareness": {
      "title": "Context Awareness",
      "description": "- **Dependency mapping** - Clear relationships between documents\n- **Priority systems** - Guidance o...",
      "content": "- **Dependency mapping** - Clear relationships between documents\n- **Priority systems** - Guidance on what to focus on first\n- **Decision frameworks** - Structured approaches to common problems\n- **Error handling** - Consistent patterns for troubleshooting"
    },
    "guide_evolution": {
      "title": "Guide Evolution",
      "description": "These guides should evolve based on:\n- **User feedback** - What works well and what doesn't\n- **Patt...",
      "content": "These guides should evolve based on:\n- **User feedback** - What works well and what doesn't\n- **Pattern recognition** - Common issues and successful solutions\n- **Technology changes** - New tools, libraries, and best practices\n- **Project growth** - New requirements and architectural decisions\n- **AI tool improvements** - New capabilities and optimization opportunities\n\nKeep the guides updated and relevant to ensure they remain valuable for both AI assistants and human developers."
    },
    "quality_standards": {
      "title": "Quality Standards",
      "description": "",
      "content": ""
    },
    "documentation_quality": {
      "title": "Documentation Quality",
      "description": "- All documents include comprehensive AI metadata\n- Consistent formatting and organization across al...",
      "content": "- All documents include comprehensive AI metadata\n- Consistent formatting and organization across all guides\n- Clear cross-references and dependency mapping\n- Regular updates and version tracking"
    },
    "implementation_quality": {
      "title": "Implementation Quality",
      "description": "- Follow established patterns and standards\n- Include proper error handling and validation\n- Compreh...",
      "content": "- Follow established patterns and standards\n- Include proper error handling and validation\n- Comprehensive testing coverage\n- Proper documentation and comments"
    },
    "ai_tool_optimization": {
      "title": "AI Tool Optimization",
      "description": "- Enhanced searchability with relevant keywords\n- Structured metadata for better tool parsing\n- Code...",
      "content": "- Enhanced searchability with relevant keywords\n- Structured metadata for better tool parsing\n- Code generation hints for implementation guidance\n- Context awareness for better user experience\n\n---\n\n**AI Quality Checklist**: Before using these guides, ensure:\n- [x] Appropriate guide is selected for the task\n- [x] Core principles are understood and applied\n- [x] Project context is considered\n- [x] Language-specific patterns are followed\n- [x] domain_specific requirements are met\n- [x] Code review patterns are applied\n- [x] AI tool optimization techniques are used\n- [x] Documentation is updated with any changes"
    }
  },
  "implementation_guidelines": {
    "implementation_quality": {
      "title": "Implementation Quality",
      "content": "- Follow established patterns and standards\n- Include proper error handling and validation\n- Comprehensive testing coverage\n- Proper documentation and comments"
    }
  }
}