{
  "metadata": {
    "title": "AI Documentation Search Index",
    "description": "Comprehensive navigation guide for AI documentation structure",
    "version": "4.0",
    "last_updated": "2025-06-21",
    "purpose": "AI documentation navigation and discovery",
    "cross_references": [
      "ai/ai_rules.json",
      "ai/ai_config.json"
    ]
  },
  "ai_metadata": {
    "template_version": "4.0",
    "ai_processing_level": "High",
    "required_context": "AI documentation navigation and structure",
    "validation_required": true,
    "code_generation": "Not applicable",
    "cross_references": [
      "ai/ai_rules.json",
      "ai/ai_config.json"
    ],
    "maintenance": "Auto-generated search index for AI documentation"
  },
  "quick_navigation": {
    "primary_reference": "ai/ai_rules.json",
    "configuration": "ai/ai_config.json",
    "overview": "ai/readme.json"
  },
  "development_areas": {
    "backend_development": {
      "title": "Backend Development",
      "description": "Python, FastAPI, database, and API development",
      "content": "- **Python style**: `ai/guide_docs/language_specific/python_style_guide.json`\n- **Testing**: `ai/guide_docs/language_specific/python_testing_style_guide.json`\n- **Database**: `ai/guide_docs/domain_specific/database_management_guide.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Code review**: `ai/guide_docs/code_review_patterns.json`"
    },
    "frontend_development": {
      "title": "Frontend Development",
      "description": "React, TypeScript, and UI development",
      "content": "- **React style**: `ai/guide_docs/language_specific/react_style_guide.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Code review**: `ai/guide_docs/code_review_patterns.json`"
    },
    "automation_scripts": {
      "title": "Automation & Scripts",
      "description": "Shell scripts, automation, and background tasks",
      "content": "- **Shell style**: `ai/guide_docs/domain_specific/shell_style_guide.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Code review**: `ai/guide_docs/code_review_patterns.json`"
    },
    "architecture_design": {
      "title": "Architecture & Design",
      "description": "System architecture, patterns, and design decisions",
      "content": "- **Architecture**: `ai/project_context/architecture_overview.json`\n- **Common patterns**: `ai/project_context/common_patterns.json`\n- **Development workflow**: `ai/project_context/development_workflow.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`"
    },
    "testing_quality": {
      "title": "Testing & Quality",
      "description": "Testing strategies, code quality, and quality assurance",
      "content": "- **Testing guide**: `ai/guide_docs/language_specific/python_testing_style_guide.json`\n- **Code review**: `ai/guide_docs/code_review_patterns.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **AI optimization**: `ai/guide_docs/ai_tool_optimization_guide.json`"
    },
    "project_management": {
      "title": "Project Management",
      "description": "Development workflow, feature development, and documentation",
      "content": "- **Development workflow**: `ai/project_context/development_workflow.json`\n- **Feature template**: `ai/guide_docs/feature_template.json`\n- **Implementation guide**: `ai/guide_docs/implementation_guide_template.json`\n- **Pattern inheritance**: `ai/guide_docs/pattern_inheritance_template.json`"
    }
  },
  "technology_specific": {
    "python": {
      "title": "Python Development",
      "description": "Python style guide, testing, and best practices",
      "content": "- **Style guide**: `ai/guide_docs/language_specific/python_style_guide.json`\n- **Testing guide**: `ai/guide_docs/language_specific/python_testing_style_guide.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Code review**: `ai/guide_docs/code_review_patterns.json`"
    },
    "react_typescript": {
      "title": "React/TypeScript",
      "description": "React components, TypeScript patterns, and frontend development",
      "content": "- **React style**: `ai/guide_docs/language_specific/react_style_guide.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Code review**: `ai/guide_docs/code_review_patterns.json`"
    },
    "database": {
      "title": "Database Operations",
      "description": "SQLAlchemy, migrations, and database management",
      "content": "- **Database guide**: `ai/guide_docs/domain_specific/database_management_guide.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Code review**: `ai/guide_docs/code_review_patterns.json`"
    },
    "shell_scripts": {
      "title": "Shell Scripts",
      "description": "Bash scripting, automation, and shell operations",
      "content": "- **Shell guide**: `ai/guide_docs/domain_specific/shell_style_guide.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Code review**: `ai/guide_docs/code_review_patterns.json`"
    }
  },
  "problem_solving": {
    "common_issues": {
      "title": "Common Issues",
      "description": "Frequently encountered problems and solutions",
      "content": "- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Code review**: `ai/guide_docs/code_review_patterns.json`\n- **AI optimization**: `ai/guide_docs/ai_tool_optimization_guide.json`"
    },
    "performance_problems": {
      "title": "Performance Problems",
      "description": "Performance optimization and tuning",
      "content": "- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Database guide**: `ai/guide_docs/domain_specific/database_management_guide.json`\n- **Python style**: `ai/guide_docs/language_specific/python_style_guide.json`"
    },
    "error_handling": {
      "title": "Error Handling",
      "description": "Error patterns, debugging, and troubleshooting",
      "content": "- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Python style**: `ai/guide_docs/language_specific/python_style_guide.json`\n- **Database guide**: `ai/guide_docs/domain_specific/database_management_guide.json`"
    },
    "security_issues": {
      "title": "Security Issues",
      "description": "Security principles, authentication, and data protection",
      "content": "- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Database guide**: `ai/guide_docs/domain_specific/database_management_guide.json`\n- **Python style**: `ai/guide_docs/language_specific/python_style_guide.json`"
    },
    "integration_problems": {
      "title": "Integration Problems",
      "description": "API integration, database integration, and deployment",
      "content": "- **Database guide**: `ai/guide_docs/domain_specific/database_management_guide.json`\n- **Common patterns**: `ai/project_context/common_patterns.json`\n- **Development workflow**: `ai/project_context/development_workflow.json`"
    }
  },
  "development_challenges": {
    "new_feature_development": {
      "title": "New Feature Development",
      "description": "Planning, implementing, and documenting new features",
      "content": "- **Feature template**: `ai/guide_docs/feature_template.json`\n- **Architecture**: `ai/project_context/architecture_overview.json`\n- **Common patterns**: `ai/project_context/common_patterns.json`\n- **Testing guide**: `ai/guide_docs/language_specific/python_testing_style_guide.json`"
    },
    "code_review": {
      "title": "Code Review",
      "description": "Review patterns, style guidelines, and quality standards",
      "content": "- **Code review**: `ai/guide_docs/code_review_patterns.json`\n- **Python style**: `ai/guide_docs/language_specific/python_style_guide.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`"
    },
    "refactoring": {
      "title": "Refactoring",
      "description": "Code organization, pattern application, and documentation updates",
      "content": "- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Python style**: `ai/guide_docs/language_specific/python_style_guide.json`\n- **Common patterns**: `ai/project_context/common_patterns.json`\n- **Testing guide**: `ai/guide_docs/language_specific/python_testing_style_guide.json`"
    }
  },
  "experience_levels": {
    "beginner": {
      "title": "Beginner",
      "description": "Getting started, basic patterns, and simple examples",
      "content": "- **Main hub**: `ai/readme.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Feature template**: `ai/guide_docs/feature_template.json`\n- **Common patterns**: `ai/project_context/common_patterns.json`"
    },
    "intermediate": {
      "title": "Intermediate",
      "description": "Advanced patterns, architecture decisions, and optimization",
      "content": "- **Common patterns**: `ai/project_context/common_patterns.json`\n- **Architecture**: `ai/project_context/architecture_overview.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Testing guide**: `ai/guide_docs/language_specific/python_testing_style_guide.json`"
    },
    "advanced": {
      "title": "Advanced",
      "description": "System architecture, complex patterns, and scalability",
      "content": "- **Architecture**: `ai/project_context/architecture_overview.json`\n- **Common patterns**: `ai/project_context/common_patterns.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`\n- **Development workflow**: `ai/project_context/development_workflow.json`"
    }
  },
  "project_phases": {
    "planning": {
      "title": "Planning",
      "description": "Feature planning, architecture overview, and technical summaries",
      "content": "- **Feature template**: `ai/guide_docs/feature_template.json`\n- **Architecture**: `ai/project_context/architecture_overview.json`\n- **Common patterns**: `ai/project_context/common_patterns.json`\n- **Development workflow**: `ai/project_context/development_workflow.json`"
    },
    "implementation": {
      "title": "Implementation",
      "description": "Code implementation, testing, and quality assurance",
      "content": "- **Python style**: `ai/guide_docs/language_specific/python_style_guide.json`\n- **Testing guide**: `ai/guide_docs/language_specific/python_testing_style_guide.json`\n- **Code review**: `ai/guide_docs/code_review_patterns.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`"
    },
    "deployment": {
      "title": "Deployment",
      "description": "Deployment process, monitoring, and maintenance",
      "content": "- **Development workflow**: `ai/project_context/development_workflow.json`\n- **Common patterns**: `ai/project_context/common_patterns.json`\n- **Shell guide**: `ai/guide_docs/domain_specific/shell_style_guide.json`"
    }
  },
  "active_features": {
    "current_plans": {
      "title": "Current Plans",
      "description": "Active implementation plans and ongoing work",
      "content": "- **Stock Tracking**: `ai/features/plans/[IN-PROGRESS]-Stock Tracking Request Plan.json`\n- **JWT Authentication**: `ai/features/plans/JWT-001-implement-jwt-authentication.json`"
    },
    "completed_features": {
      "title": "Completed Features",
      "description": "Documentation of completed modules and features",
      "content": "- **Stock Data Pipeline**: `ai/features/summaries/[COMPLETED]-stock_data_processing_pipeline_summary.json`"
    }
  },
  "maintenance_tools": {
    "health_check": {
      "title": "Health Check",
      "description": "Documentation validation and quality assurance",
      "content": "- **Health check script**: `scripts/ai_health_check.py`\n- **Outputs**: `ai/outputs/health_check/`"
    },
    "ai_optimization": {
      "title": "AI Optimization",
      "description": "AI tool optimization and consumption patterns",
      "content": "- **AI optimization guide**: `ai/guide_docs/ai_tool_optimization_guide.json`\n- **Core principles**: `ai/guide_docs/core_principles.json`"
    },
    "helper_scripts": {
      "ai_report_helper": {
        "path": "scripts/ai_report_helper.py",
        "description": "AI report helper class for generating structured JSON output from scripts",
        "category": "development_tools",
        "tags": ["json", "ai", "reports", "helper"]
      }
    }
  },
  "search_strategies": {
    "by_task": {
      "api_development": "Backend Development → Python style + Database guide + Testing guide",
      "frontend_development": "Frontend Development → React style + Core principles",
      "database_work": "Database Operations → Database guide + Core principles",
      "automation": "Automation & Scripts → Shell guide + Core principles",
      "testing": "Testing & Quality → Testing guide + Code review",
      "architecture": "Architecture & Design → Architecture + Common patterns + Core principles"
    },
    "by_problem": {
      "performance": "Performance Problems → Core principles + Database guide",
      "security": "Security Issues → Core principles + Database guide",
      "errors": "Error Handling → Core principles + Python style",
      "integration": "Integration Problems → Database guide + Common patterns",
      "quality": "Code Review → Code review + Python style + Core principles"
    },
    "by_technology": {
      "python": "Python Development → Python style + Testing guide",
      "react": "React/TypeScript → React style + Core principles",
      "database": "Database Operations → Database guide + Core principles",
      "shell": "Shell Scripts → Shell guide + Core principles"
    }
  },
  "navigation_tips": {
    "getting_started": "Start with ai/readme.json for overview, then ai/ai_rules.json for comprehensive rules",
    "quick_reference": "Use ai/ai_rules.json for quick access to all patterns and rules",
    "deep_dive": "Follow cross-references in each guide for comprehensive understanding",
    "problem_solving": "Use search strategies to find relevant guides for specific problems",
    "maintenance": "Use scripts/ai_health_check.py to validate documentation quality"
  }
}
